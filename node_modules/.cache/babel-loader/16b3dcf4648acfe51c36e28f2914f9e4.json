{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/MyRecords.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MyRecords = () => {\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch records from the backend when the component mounts\n    fetchRecords();\n  }, []);\n\n  const fetchRecords = async () => {\n    try {\n      // Make a GET request to fetch records from the backend\n      const response = await axios.get('http://localhost:2000/get-records');\n      setRecords(response.data.records);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching records:', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"My Records\"), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, records.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, record.filename))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"No records found.\")));\n};\n\nexport default MyRecords;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/MyRecords.js"],"names":["React","useState","useEffect","axios","MyRecords","records","setRecords","loading","setLoading","fetchRecords","response","get","data","error","console","length","map","record","index","filename"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,YAAY;AACb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,mCAAV,CAAvB;AACAL,MAAAA,UAAU,CAACI,QAAQ,CAACE,IAAT,CAAcP,OAAf,CAAV;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD,CAKE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD;AACF,GATD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGN,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACU,MAAR,GAAiB,CAAjB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,MAAM,CAACE,QAAxB,CADD,CADH,CADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARJ,CALJ,CADF;AAoBD,CAxCD;;AA0CA,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MyRecords = () => {\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch records from the backend when the component mounts\n    fetchRecords();\n  }, []);\n\n  const fetchRecords = async () => {\n    try {\n      // Make a GET request to fetch records from the backend\n      const response = await axios.get('http://localhost:2000/get-records');\n      setRecords(response.data.records);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching records:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>My Records</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {records.length > 0 ? (\n            <ul>\n              {records.map((record, index) => (\n                <li key={index}>{record.filename}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No records found.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyRecords;\n"]},"metadata":{},"sourceType":"module"}