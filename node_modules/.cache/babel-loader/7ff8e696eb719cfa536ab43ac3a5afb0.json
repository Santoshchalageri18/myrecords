{"ast":null,"code":"import { addMilliseconds } from \"./addMilliseconds.mjs\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be subtracted.\n *\n * @returns The new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport function subMilliseconds(date, amount) {\n  return addMilliseconds(date, -amount);\n} // Fallback for modularized imports:\n\nexport default subMilliseconds;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/subMilliseconds.mjs"],"names":["addMilliseconds","subMilliseconds","date","amount"],"mappings":"AAAA,SAASA,eAAT,QAAgC,uBAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,MAA/B,EAAuC;AAC5C,SAAOH,eAAe,CAACE,IAAD,EAAO,CAACC,MAAR,CAAtB;AACD,C,CAED;;AACA,eAAeF,eAAf","sourcesContent":["import { addMilliseconds } from \"./addMilliseconds.mjs\";\n\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be subtracted.\n *\n * @returns The new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport function subMilliseconds(date, amount) {\n  return addMilliseconds(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMilliseconds;\n"]},"metadata":{},"sourceType":"module"}