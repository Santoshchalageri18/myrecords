{"ast":null,"code":"import { millisecondsInSecond } from \"./constants.mjs\";\n/**\n * @name millisecondsToSeconds\n * @category Conversion Helpers\n * @summary Convert milliseconds to seconds.\n *\n * @description\n * Convert a number of milliseconds to a full number of seconds.\n *\n * @param milliseconds - The number of milliseconds to be converted\n *\n * @returns The number of milliseconds converted in seconds\n *\n * @example\n * // Convert 1000 miliseconds to seconds:\n * const result = millisecondsToSeconds(1000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToSeconds(1999)\n * //=> 1\n */\n\nexport function millisecondsToSeconds(milliseconds) {\n  const seconds = milliseconds / millisecondsInSecond;\n  return Math.trunc(seconds);\n} // Fallback for modularized imports:\n\nexport default millisecondsToSeconds;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/millisecondsToSeconds.mjs"],"names":["millisecondsInSecond","millisecondsToSeconds","milliseconds","seconds","Math","trunc"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,iBAArC;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,SAASC,qBAAT,CAA+BC,YAA/B,EAA6C;AAClD,QAAMC,OAAO,GAAGD,YAAY,GAAGF,oBAA/B;AACA,SAAOI,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAP;AACD,C,CAED;;AACA,eAAeF,qBAAf","sourcesContent":["import { millisecondsInSecond } from \"./constants.mjs\";\n\n/**\n * @name millisecondsToSeconds\n * @category Conversion Helpers\n * @summary Convert milliseconds to seconds.\n *\n * @description\n * Convert a number of milliseconds to a full number of seconds.\n *\n * @param milliseconds - The number of milliseconds to be converted\n *\n * @returns The number of milliseconds converted in seconds\n *\n * @example\n * // Convert 1000 miliseconds to seconds:\n * const result = millisecondsToSeconds(1000)\n * //=> 1\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToSeconds(1999)\n * //=> 1\n */\nexport function millisecondsToSeconds(milliseconds) {\n  const seconds = milliseconds / millisecondsInSecond;\n  return Math.trunc(seconds);\n}\n\n// Fallback for modularized imports:\nexport default millisecondsToSeconds;\n"]},"metadata":{},"sourceType":"module"}