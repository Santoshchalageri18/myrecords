{"ast":null,"code":"import { isSameWeek } from \"./isSameWeek.mjs\";\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week (and year)?\n *\n * @description\n * Are the given dates in the same ISO week (and year)?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same ISO week (and year)\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n *\n * @example\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n * //=> false\n */\n\nexport function isSameISOWeek(dateLeft, dateRight) {\n  return isSameWeek(dateLeft, dateRight, {\n    weekStartsOn: 1\n  });\n} // Fallback for modularized imports:\n\nexport default isSameISOWeek;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/isSameISOWeek.mjs"],"names":["isSameWeek","isSameISOWeek","dateLeft","dateRight","weekStartsOn"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4C;AACjD,SAAOH,UAAU,CAACE,QAAD,EAAWC,SAAX,EAAsB;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAtB,CAAjB;AACD,C,CAED;;AACA,eAAeH,aAAf","sourcesContent":["import { isSameWeek } from \"./isSameWeek.mjs\";\n\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week (and year)?\n *\n * @description\n * Are the given dates in the same ISO week (and year)?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same ISO week (and year)\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n *\n * @example\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n * //=> false\n */\nexport function isSameISOWeek(dateLeft, dateRight) {\n  return isSameWeek(dateLeft, dateRight, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default isSameISOWeek;\n"]},"metadata":{},"sourceType":"module"}