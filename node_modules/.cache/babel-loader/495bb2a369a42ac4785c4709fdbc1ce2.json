{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/UploadRecord.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { Button, TextField, Dialog, DialogActions, DialogTitle, DialogContent, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, LinearProgress } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst UploadRecord = () => {\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [records, setRecords] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    getRecords();\n  }, [page, search]);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n\n  const getRecords = () => {\n    setLoading(true);\n    let data = `?page=${page}`;\n\n    if (search) {\n      data += `&search=${search}`;\n    }\n\n    axios.get(`http://localhost:2000/get-records${data}`, {\n      headers: {\n        'token': token\n      }\n    }).then(res => {\n      setLoading(false);\n      setRecords(res.data.records);\n      setPages(res.data.pages);\n    }).catch(err => {\n      setLoading(false);\n      swal({\n        text: err.response.data.errorMessage,\n        icon: 'error'\n      });\n    });\n  };\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file || !description) {\n      swal({\n        text: 'Please provide a file and description.',\n        icon: 'warning'\n      });\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('description', description);\n    setUploading(true);\n    axios.post('http://localhost:2000/upload-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token\n      }\n    }).then(response => {\n      setUploading(false);\n      swal({\n        text: 'File uploaded successfully!',\n        icon: 'success'\n      });\n      setFile(null);\n      setDescription('');\n      getRecords();\n    }).catch(error => {\n      var _error$response, _error$response$data;\n\n      setUploading(false);\n      swal({\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errorMessage) || 'An error occurred',\n        icon: 'error'\n      });\n    });\n  };\n\n  const handleEditOpen = record => {\n    setCurrentRecord(record);\n    setDescription(record.description);\n    setOpenEditModal(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEditModal(false);\n    setCurrentRecord(null);\n    setDescription('');\n  };\n\n  const handleUpdate = () => {\n    const formData = new FormData();\n    formData.append('id', currentRecord._id);\n    if (file) formData.append('file', file);\n    formData.append('description', description);\n    axios.post('http://localhost:2000/update-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token\n      }\n    }).then(res => {\n      swal({\n        text: 'Record updated successfully!',\n        icon: 'success'\n      });\n      handleEditClose();\n      getRecords();\n    }).catch(err => {\n      swal({\n        text: err.response.data.errorMessage,\n        icon: 'error'\n      });\n      handleEditClose();\n    });\n  };\n\n  const handleDelete = id => {\n    axios.post('http://localhost:2000/delete-record', {\n      id\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': token\n      }\n    }).then(res => {\n      swal({\n        text: 'Record deleted successfully!',\n        icon: 'success'\n      });\n      getRecords();\n    }).catch(err => {\n      swal({\n        text: err.response.data.errorMessage,\n        icon: 'error'\n      });\n    });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, \"Upload Record\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    disabled: uploading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, uploading ? 'Uploading...' : 'Upload')), /*#__PURE__*/React.createElement(Dialog, {\n    open: openEditModal,\n    onClose: handleEditClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Edit Record\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    autoComplete: \"off\",\n    value: description,\n    onChange: handleDescriptionChange,\n    placeholder: \"Description\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"Upload\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleFileChange,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), \"\\xA0\", file && file.name), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEditClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleUpdate,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(TextField, {\n    type: \"search\",\n    autoComplete: \"off\",\n    placeholder: \"Search by description\",\n    value: search,\n    onChange: handleSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, records.map(record => /*#__PURE__*/React.createElement(TableRow, {\n    key: record._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, record.description), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `http://localhost:2000/${record.file}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \"View File\")), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: () => handleEditOpen(record),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: () => handleDelete(record._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, \"Delete\")))))), /*#__PURE__*/React.createElement(Pagination, {\n    count: pages,\n    page: page,\n    onChange: handlePageChange,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UploadRecord;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/UploadRecord.js"],"names":["React","useState","useEffect","axios","swal","Button","TextField","Dialog","DialogActions","DialogTitle","DialogContent","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LinearProgress","Pagination","UploadRecord","file","setFile","description","setDescription","uploading","setUploading","records","setRecords","page","setPage","pages","setPages","loading","setLoading","search","setSearch","openEditModal","setOpenEditModal","currentRecord","setCurrentRecord","token","setToken","getRecords","storedToken","localStorage","getItem","data","get","headers","then","res","catch","err","text","response","errorMessage","icon","handleFileChange","e","target","files","handleDescriptionChange","value","handleUpload","formData","FormData","append","post","error","handleEditOpen","record","handleEditClose","handleUpdate","_id","handleDelete","id","handlePageChange","event","handleSearchChange","name","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { Button, TextField, Dialog, DialogActions, DialogTitle, DialogContent, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, LinearProgress } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst UploadRecord = () => {\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [records, setRecords] = useState([]);\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [currentRecord, setCurrentRecord] = useState(null);\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    getRecords();\n  }, [page, search]);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n\n  const getRecords = () => {\n    setLoading(true);\n    let data = `?page=${page}`;\n    if (search) {\n      data += `&search=${search}`;\n    }\n    axios.get(`http://localhost:2000/get-records${data}`, {\n      headers: {\n        'token': token\n      }\n    })\n      .then(res => {\n        setLoading(false);\n        setRecords(res.data.records);\n        setPages(res.data.pages);\n      })\n      .catch(err => {\n        setLoading(false);\n        swal({\n          text: err.response.data.errorMessage,\n          icon: 'error',\n        });\n      });\n  };\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file || !description) {\n      swal({\n        text: 'Please provide a file and description.',\n        icon: 'warning',\n      });\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('description', description);\n\n    setUploading(true);\n\n    axios.post('http://localhost:2000/upload-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token\n      },\n    })\n      .then((response) => {\n        setUploading(false);\n        swal({\n          text: 'File uploaded successfully!',\n          icon: 'success',\n        });\n        setFile(null);\n        setDescription('');\n        getRecords();\n      })\n      .catch((error) => {\n        setUploading(false);\n        swal({\n          text: error.response?.data?.errorMessage || 'An error occurred',\n          icon: 'error',\n        });\n      });\n  };\n\n  const handleEditOpen = (record) => {\n    setCurrentRecord(record);\n    setDescription(record.description);\n    setOpenEditModal(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEditModal(false);\n    setCurrentRecord(null);\n    setDescription('');\n  };\n\n  const handleUpdate = () => {\n    const formData = new FormData();\n    formData.append('id', currentRecord._id);\n    if (file) formData.append('file', file);\n    formData.append('description', description);\n\n    axios.post('http://localhost:2000/update-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token\n      },\n    })\n      .then((res) => {\n        swal({\n          text: 'Record updated successfully!',\n          icon: 'success',\n        });\n        handleEditClose();\n        getRecords();\n      })\n      .catch((err) => {\n        swal({\n          text: err.response.data.errorMessage,\n          icon: 'error',\n        });\n        handleEditClose();\n      });\n  };\n\n  const handleDelete = (id) => {\n    axios.post('http://localhost:2000/delete-record', { id }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': token\n      },\n    })\n      .then((res) => {\n        swal({\n          text: 'Record deleted successfully!',\n          icon: 'success',\n        });\n        getRecords();\n      })\n      .catch((err) => {\n        swal({\n          text: err.response.data.errorMessage,\n          icon: 'error',\n        });\n      });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n\n  return (\n    <div>\n      {loading && <LinearProgress />}\n      <h1>Upload Record</h1>\n      <div>\n        <input type=\"file\" onChange={handleFileChange} />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={handleDescriptionChange}\n        />\n        <button onClick={handleUpload} disabled={uploading}>\n          {uploading ? 'Uploading...' : 'Upload'}\n        </button>\n      </div>\n\n      <Dialog\n        open={openEditModal}\n        onClose={handleEditClose}\n      >\n        <DialogTitle>Edit Record</DialogTitle>\n        <DialogContent>\n          <TextField\n            type=\"text\"\n            autoComplete=\"off\"\n            value={description}\n            onChange={handleDescriptionChange}\n            placeholder=\"Description\"\n            required\n          /><br />\n          <Button variant=\"contained\" component=\"label\">\n            Upload\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileChange}\n              hidden\n            />\n          </Button>&nbsp;\n          {file && file.name}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEditClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleUpdate} color=\"primary\" autoFocus>\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <TextField\n        type=\"search\"\n        autoComplete=\"off\"\n        placeholder=\"Search by description\"\n        value={search}\n        onChange={handleSearchChange}\n      />\n\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Description</TableCell>\n              <TableCell align=\"center\">File</TableCell>\n              <TableCell align=\"center\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {records.map((record) => (\n              <TableRow key={record._id}>\n                <TableCell align=\"center\">{record.description}</TableCell>\n                <TableCell align=\"center\">\n                  <a href={`http://localhost:2000/${record.file}`} target=\"_blank\" rel=\"noopener noreferrer\">View File</a>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => handleEditOpen(record)}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={() => handleDelete(record._id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Pagination count={pages} page={page} onChange={handlePageChange} color=\"primary\" />\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default UploadRecord;\n"]},"metadata":{},"sourceType":"module"}