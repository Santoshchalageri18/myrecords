{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/UploadRecord.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst UploadRecord = () => {\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n  const [token] = useState(null); // State to store the JWT token\n  // Function to handle file change\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  }; // Function to handle description change\n\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  }; // Function to handle upload button click\n\n\n  const handleUpload = () => {\n    if (!file || !description) {\n      swal({\n        text: 'Please provide a file and description.',\n        icon: 'warning'\n      });\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('description', description);\n    setUploading(true);\n    axios.post('http://localhost:2000/upload-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token // Include the JWT token in the request headers\n\n      }\n    }).then(response => {\n      setUploading(false);\n      swal({\n        text: 'File uploaded successfully!',\n        icon: 'success'\n      });\n      setFile(null);\n      setDescription('');\n\n      if (response.data && response.data.fileUrl) {\n        setUploadedFileUrl(response.data.fileUrl); // Store the uploaded file URL\n      }\n    }).catch(error => {\n      var _error$response, _error$response$data;\n\n      setUploading(false);\n      swal({\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errorMessage) || 'An error occurred',\n        icon: 'error'\n      });\n    });\n  }; // Render the component\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Upload Record\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    disabled: uploading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, uploading ? 'Uploading...' : 'Upload')), uploadedFileUrl && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Uploaded File:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: uploadedFileUrl,\n    alt: \"Uploaded File\",\n    style: {\n      maxWidth: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default UploadRecord;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/DashbordCompo/UploadRecord.js"],"names":["React","useState","axios","swal","UploadRecord","file","setFile","description","setDescription","uploading","setUploading","uploadedFileUrl","setUploadedFileUrl","token","handleFileChange","e","target","files","handleDescriptionChange","value","handleUpload","text","icon","formData","FormData","append","post","headers","then","response","data","fileUrl","catch","error","errorMessage","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACY,KAAD,IAAUZ,QAAQ,CAAC,IAAD,CAAxB,CALyB,CAKO;AAEhC;;AACA,QAAMa,gBAAgB,GAAIC,CAAD,IAAO;AAC9BT,IAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACD,GAFD,CARyB,CAYzB;;;AACA,QAAMC,uBAAuB,GAAIH,CAAD,IAAO;AACrCP,IAAAA,cAAc,CAACO,CAAC,CAACC,MAAF,CAASG,KAAV,CAAd;AACD,GAFD,CAbyB,CAiBzB;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAI,CAACf,IAAD,IAAS,CAACE,WAAd,EAA2B;AACzBJ,MAAAA,IAAI,CAAC;AACHkB,QAAAA,IAAI,EAAE,wCADH;AAEHC,QAAAA,IAAI,EAAE;AAFH,OAAD,CAAJ;AAIA;AACD;;AAED,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBpB,IAAxB;AACAkB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BlB,WAA/B;AAEAG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAR,IAAAA,KAAK,CAACwB,IAAN,CAAW,qCAAX,EAAkDH,QAAlD,EAA4D;AAC1DI,MAAAA,OAAO,EAAE;AACP,wBAAgB,qBADT;AAEP,iBAASd,KAFF,CAEQ;;AAFR;AADiD,KAA5D,EAMGe,IANH,CAMSC,QAAD,IAAc;AAClBnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,MAAAA,IAAI,CAAC;AACHkB,QAAAA,IAAI,EAAE,6BADH;AAEHC,QAAAA,IAAI,EAAE;AAFH,OAAD,CAAJ;AAIAhB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;;AACA,UAAIqB,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,OAAnC,EAA4C;AAC1CnB,QAAAA,kBAAkB,CAACiB,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAlB,CAD0C,CACC;AAC5C;AACF,KAjBH,EAkBGC,KAlBH,CAkBUC,KAAD,IAAW;AAAA;;AAChBvB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,MAAAA,IAAI,CAAC;AACHkB,QAAAA,IAAI,EAAE,oBAAAY,KAAK,CAACJ,QAAN,4FAAgBC,IAAhB,8EAAsBI,YAAtB,KAAsC,mBADzC;AAEHZ,QAAAA,IAAI,EAAE;AAFH,OAAD,CAAJ;AAID,KAxBH;AAyBD,GAxCD,CAlByB,CA4DzB;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAER,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,KAAK,EAAEP,WAHT;AAIE,IAAA,QAAQ,EAAEW,uBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAA+B,IAAA,QAAQ,EAAEX,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,GAAG,cAAH,GAAoB,QADhC,CARF,CAFF,EAcGE,eAAe,iBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAK,IAAA,GAAG,EAAEA,eAAV;AAA2B,IAAA,GAAG,EAAC,eAA/B;AAA+C,IAAA,KAAK,EAAE;AAAEwB,MAAAA,QAAQ,EAAE;AAAZ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAfJ,CADF;AAwBD,CArFD;;AAuFA,eAAe/B,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst UploadRecord = () => {\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n  const [token] = useState(null); // State to store the JWT token\n\n  // Function to handle file change\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  // Function to handle description change\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  // Function to handle upload button click\n  const handleUpload = () => {\n    if (!file || !description) {\n      swal({\n        text: 'Please provide a file and description.',\n        icon: 'warning',\n      });\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('description', description);\n\n    setUploading(true);\n\n    axios.post('http://localhost:2000/upload-record', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'token': token // Include the JWT token in the request headers\n      },\n    })\n      .then((response) => {\n        setUploading(false);\n        swal({\n          text: 'File uploaded successfully!',\n          icon: 'success',\n        });\n        setFile(null);\n        setDescription('');\n        if (response.data && response.data.fileUrl) {\n          setUploadedFileUrl(response.data.fileUrl); // Store the uploaded file URL\n        }\n      })\n      .catch((error) => {\n        setUploading(false);\n        swal({\n          text: error.response?.data?.errorMessage || 'An error occurred',\n          icon: 'error',\n        });\n      });\n  };\n\n  // Render the component\n  return (\n    <div>\n      <h1>Upload Record</h1>\n      <div>\n        <input type=\"file\" onChange={handleFileChange} />\n        <input \n          type=\"text\" \n          placeholder=\"Description\" \n          value={description} \n          onChange={handleDescriptionChange} \n        />\n        <button onClick={handleUpload} disabled={uploading}>\n          {uploading ? 'Uploading...' : 'Upload'}\n        </button>\n      </div>\n      {uploadedFileUrl && (\n        <div>\n          <p>Uploaded File:</p>\n          {/* Render the uploaded file */}\n          <img src={uploadedFileUrl} alt=\"Uploaded File\" style={{ maxWidth: '100%' }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadRecord;\n"]},"metadata":{},"sourceType":"module"}