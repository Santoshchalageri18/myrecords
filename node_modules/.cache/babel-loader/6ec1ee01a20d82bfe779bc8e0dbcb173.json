{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/ReportPage.js\";\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport '../Styles/ReportPage.css';\n\nconst ReportPage = () => {\n  const [records, setRecords] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const handleUpload = () => {\n    // Upload functionality here\n    if (selectedFiles.length === 0) {\n      Swal.fire('No files selected', 'Please select files to upload', 'warning');\n      return;\n    } // Simulate upload process\n\n\n    Swal.fire('Upload started', 'Simulating upload process...', 'info');\n    setTimeout(() => {\n      Swal.fire('Upload complete', 'Files uploaded successfully', 'success'); // Update records with uploaded files\n\n      setRecords(prevRecords => prevRecords.concat(selectedFiles));\n      setSelectedFiles([]); // Clear selected files\n    }, 2000);\n  };\n\n  const handleFileChange = e => {\n    const files = Array.from(e.target.files);\n    setSelectedFiles(files);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn upload-btn\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Upload Report\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Total \", records.length, \" Record(s) Found.\"), records.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"No Report Available.\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"report-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, record.name, \" \")))));\n};\n\nexport default ReportPage;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/ReportPage.js"],"names":["React","useState","Swal","ReportPage","records","setRecords","selectedFiles","setSelectedFiles","handleUpload","length","fire","setTimeout","prevRecords","concat","handleFileChange","e","files","Array","from","target","map","record","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,0BAAP;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzB;AACA,QAAIF,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC9BP,MAAAA,IAAI,CAACQ,IAAL,CAAU,mBAAV,EAA+B,+BAA/B,EAAgE,SAAhE;AACA;AACD,KALwB,CAOzB;;;AACAR,IAAAA,IAAI,CAACQ,IAAL,CAAU,gBAAV,EAA4B,8BAA5B,EAA4D,MAA5D;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,IAAI,CAACQ,IAAL,CAAU,iBAAV,EAA6B,6BAA7B,EAA4D,SAA5D,EADe,CAEf;;AACAL,MAAAA,UAAU,CAACO,WAAW,IAAIA,WAAW,CAACC,MAAZ,CAAmBP,aAAnB,CAAhB,CAAV;AACAC,MAAAA,gBAAgB,CAAC,EAAD,CAAhB,CAJe,CAIO;AACvB,KALS,EAKP,IALO,CAAV;AAMD,GAfD;;AAiBA,QAAMO,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;AACAT,IAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,QAAQ,EAAEF,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEN,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAFF,eAME;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,OAAO,CAACK,MAAlB,sBADF,EAEGL,OAAO,CAACK,MAAR,KAAmB,CAAnB,gBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADD,gBAKC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGL,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACE,IADV,MADD,CAFH,CAPJ,CANF,CADF;AA0BD,CApDD;;AAsDA,eAAepB,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport '../Styles/ReportPage.css';\n\nconst ReportPage = () => {\n  const [records, setRecords] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const handleUpload = () => {\n    // Upload functionality here\n    if (selectedFiles.length === 0) {\n      Swal.fire('No files selected', 'Please select files to upload', 'warning');\n      return;\n    }\n\n    // Simulate upload process\n    Swal.fire('Upload started', 'Simulating upload process...', 'info');\n    setTimeout(() => {\n      Swal.fire('Upload complete', 'Files uploaded successfully', 'success');\n      // Update records with uploaded files\n      setRecords(prevRecords => prevRecords.concat(selectedFiles));\n      setSelectedFiles([]); // Clear selected files\n    }, 2000);\n  };\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    setSelectedFiles(files);\n  };\n\n  return (\n    <div className=\"report-page\">\n      <h2>Report</h2>\n      <div className=\"report-header\">\n        <input type=\"file\" multiple onChange={handleFileChange} />\n        <button className=\"btn upload-btn\" onClick={handleUpload}>Upload Report</button>\n      </div>\n      <div className=\"report-body\">\n        <p>Total {records.length} Record(s) Found.</p>\n        {records.length === 0 ? (\n          <div className=\"no-report\">\n            <p>No Report Available.</p>\n          </div>\n        ) : (\n          <div className=\"report-list\">\n            {/* Render uploaded records */}\n            {records.map((record, index) => (\n              <div key={index} className=\"report-item\">\n                {record.name} {/* Display file name or any other relevant information */}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReportPage;\n"]},"metadata":{},"sourceType":"module"}