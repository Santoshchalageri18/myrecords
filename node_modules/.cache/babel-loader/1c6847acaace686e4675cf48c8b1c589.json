{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/ReportPage.js\";\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Swal from 'sweetalert2';\nimport '../Styles/ReportPage.css';\n\nconst ReportPage = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [records, setRecords] = useState([]);\n\n  const handleSearch = () => {\n    // Perform search operation here\n    Swal.fire('Search clicked', 'Implement search logic here', 'info');\n    setRecords([]); // Update this with actual search results\n  };\n\n  const handleReset = () => {\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setRecords([]);\n  };\n\n  const handleUpload = () => {\n    // Implement upload functionality here\n    Swal.fire('Upload clicked', 'Implement upload logic here', 'info');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    startDate: startDate,\n    endDate: endDate,\n    selectsStart: true,\n    dateFormat: \"dd/MM/yyyy\",\n    className: \"date-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: endDate,\n    onChange: date => setEndDate(date),\n    startDate: startDate,\n    endDate: endDate,\n    selectsEnd: true,\n    dateFormat: \"dd/MM/yyyy\",\n    className: \"date-picker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn search-btn\",\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn reset-btn\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn upload-btn\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Upload Report\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"report-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Total \", records.length, \" Record Found.\"), records.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"No Report Available.\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn upload-btn\",\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Upload Report\")) :\n  /*#__PURE__*/\n  // Render records here\n  React.createElement(\"div\", {\n    className: \"report-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"report-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, record)))));\n};\n\nexport default ReportPage;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/ReportPage.js"],"names":["React","useState","DatePicker","Swal","ReportPage","startDate","setStartDate","Date","endDate","setEndDate","records","setRecords","handleSearch","fire","handleReset","handleUpload","date","length","map","record","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Swal from 'sweetalert2';\n\nimport '../Styles/ReportPage.css';\n\nconst ReportPage = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [records, setRecords] = useState([]);\n\n  const handleSearch = () => {\n    // Perform search operation here\n    Swal.fire('Search clicked', 'Implement search logic here', 'info');\n    setRecords([]); // Update this with actual search results\n  };\n\n  const handleReset = () => {\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setRecords([]);\n  };\n\n  const handleUpload = () => {\n    // Implement upload functionality here\n    Swal.fire('Upload clicked', 'Implement upload logic here', 'info');\n  };\n\n  return (\n    <div className=\"report-page\">\n      <h2>Report</h2>\n      <div className=\"report-header\">\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => setStartDate(date)}\n          startDate={startDate}\n          endDate={endDate}\n          selectsStart\n          dateFormat=\"dd/MM/yyyy\"\n          className=\"date-picker\"\n        />\n        <DatePicker\n          selected={endDate}\n          onChange={(date) => setEndDate(date)}\n          startDate={startDate}\n          endDate={endDate}\n          selectsEnd\n          dateFormat=\"dd/MM/yyyy\"\n          className=\"date-picker\"\n        />\n        <button className=\"btn search-btn\" onClick={handleSearch}>Search</button>\n        <button className=\"btn reset-btn\" onClick={handleReset}>Reset</button>\n        <button className=\"btn upload-btn\" onClick={handleUpload}>Upload Report</button>\n      </div>\n      <div className=\"report-body\">\n        <p>Total {records.length} Record Found.</p>\n        {records.length === 0 ? (\n          <div className=\"no-report\">\n            <p>No Report Available.</p>\n            <button className=\"btn upload-btn\" onClick={handleUpload}>Upload Report</button>\n          </div>\n        ) : (\n          // Render records here\n          <div className=\"report-list\">\n            {/* Example of rendering records */}\n            {records.map((record, index) => (\n              <div key={index} className=\"report-item\">\n                {record}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReportPage;\n"]},"metadata":{},"sourceType":"module"}