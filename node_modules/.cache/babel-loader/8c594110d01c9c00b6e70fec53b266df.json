{"ast":null,"code":"import { millisecondsInHour } from \"./constants.mjs\";\n/**\n * @name millisecondsToHours\n * @category Conversion Helpers\n * @summary Convert milliseconds to hours.\n *\n * @description\n * Convert a number of milliseconds to a full number of hours.\n *\n * @param milliseconds - The number of milliseconds to be converted\n *\n * @returns The number of milliseconds converted in hours\n *\n * @example\n * // Convert 7200000 milliseconds to hours:\n * const result = millisecondsToHours(7200000)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToHours(7199999)\n * //=> 1\n */\n\nexport function millisecondsToHours(milliseconds) {\n  const hours = milliseconds / millisecondsInHour;\n  return Math.trunc(hours);\n} // Fallback for modularized imports:\n\nexport default millisecondsToHours;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/millisecondsToHours.mjs"],"names":["millisecondsInHour","millisecondsToHours","milliseconds","hours","Math","trunc"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,iBAAnC;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;AAChD,QAAMC,KAAK,GAAGD,YAAY,GAAGF,kBAA7B;AACA,SAAOI,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAP;AACD,C,CAED;;AACA,eAAeF,mBAAf","sourcesContent":["import { millisecondsInHour } from \"./constants.mjs\";\n\n/**\n * @name millisecondsToHours\n * @category Conversion Helpers\n * @summary Convert milliseconds to hours.\n *\n * @description\n * Convert a number of milliseconds to a full number of hours.\n *\n * @param milliseconds - The number of milliseconds to be converted\n *\n * @returns The number of milliseconds converted in hours\n *\n * @example\n * // Convert 7200000 milliseconds to hours:\n * const result = millisecondsToHours(7200000)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = millisecondsToHours(7199999)\n * //=> 1\n */\nexport function millisecondsToHours(milliseconds) {\n  const hours = milliseconds / millisecondsInHour;\n  return Math.trunc(hours);\n}\n\n// Fallback for modularized imports:\nexport default millisecondsToHours;\n"]},"metadata":{},"sourceType":"module"}