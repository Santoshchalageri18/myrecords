{"ast":null,"code":"import { constructFrom } from \"./constructFrom.mjs\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param weekYear - The ISO week-numbering year of the new date\n *\n * @returns The new date with the ISO week-numbering year set\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport function setISOWeekYear(date, weekYear) {\n  let _date = toDate(date);\n\n  const diff = differenceInCalendarDays(_date, startOfISOWeekYear(_date));\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  _date = startOfISOWeekYear(fourthOfJanuary);\n\n  _date.setDate(_date.getDate() + diff);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default setISOWeekYear;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/setISOWeekYear.mjs"],"names":["constructFrom","differenceInCalendarDays","startOfISOWeekYear","toDate","setISOWeekYear","date","weekYear","_date","diff","fourthOfJanuary","setFullYear","setHours","setDate","getDate"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwC;AAC7C,MAAIC,KAAK,GAAGJ,MAAM,CAACE,IAAD,CAAlB;;AACA,QAAMG,IAAI,GAAGP,wBAAwB,CAACM,KAAD,EAAQL,kBAAkB,CAACK,KAAD,CAA1B,CAArC;AACA,QAAME,eAAe,GAAGT,aAAa,CAACK,IAAD,EAAO,CAAP,CAArC;AACAI,EAAAA,eAAe,CAACC,WAAhB,CAA4BJ,QAA5B,EAAsC,CAAtC,EAAyC,CAAzC;AACAG,EAAAA,eAAe,CAACE,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;AACAJ,EAAAA,KAAK,GAAGL,kBAAkB,CAACO,eAAD,CAA1B;;AACAF,EAAAA,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACM,OAAN,KAAkBL,IAAhC;;AACA,SAAOD,KAAP;AACD,C,CAED;;AACA,eAAeH,cAAf","sourcesContent":["import { constructFrom } from \"./constructFrom.mjs\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param weekYear - The ISO week-numbering year of the new date\n *\n * @returns The new date with the ISO week-numbering year set\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nexport function setISOWeekYear(date, weekYear) {\n  let _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfISOWeekYear(_date));\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(weekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  _date = startOfISOWeekYear(fourthOfJanuary);\n  _date.setDate(_date.getDate() + diff);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeekYear;\n"]},"metadata":{},"sourceType":"module"}