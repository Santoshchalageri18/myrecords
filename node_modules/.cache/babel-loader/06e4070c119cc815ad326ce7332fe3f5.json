{"ast":null,"code":"var _jsxFileName = \"/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Pages/Login.js\";\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport { Button, TextField, Link } from \"@material-ui/core\";\nimport { withRouter } from \"../utils\";\nimport '../Styles/Login.css'; // Import custom CSS file for login page styling\n\nimport Header from \"../Header\";\n\nconst axios = require(\"axios\");\n\nconst bcrypt = require(\"bcryptjs\");\n\nvar salt = bcrypt.genSaltSync(10);\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.login = () => {\n      const pwd = bcrypt.hashSync(this.state.password, salt);\n      axios.post('http://localhost:2000/login', {\n        username: this.state.username,\n        password: pwd\n      }).then(res => {\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('user_id', res.data.id);\n        localStorage.setItem('loggedIn', 'true'); // Set flag indicating user is logged in\n        // this.props.history.push('/dashboard');\n\n        this.props.navigate(\"/HomeDashboard\");\n      }).catch(err => {\n        if (err.response && err.response.data && err.response.data.errorMessage) {\n          swal({\n            text: err.response.data.errorMessage,\n            icon: \"error\",\n            type: \"error\"\n          });\n        }\n      });\n    };\n\n    this.handleGoogleSignIn = () => {\n      // Initialize Google Sign-In with client ID\n      window.gapi.load('auth2', () => {\n        const auth2 = window.gapi.auth2.init({\n          client_id: '623689550663-1a1bdc3ji7qcptsb1uguudvkrfqdsab8.apps.googleusercontent.com'\n        });\n        auth2.signIn().then(googleUser => {\n          const profile = googleUser.getBasicProfile();\n          const id_token = googleUser.getAuthResponse().id_token; // Send id_token to your backend for verification and user authentication\n\n          axios.post('http://localhost:2000/google-login', {\n            id_token: id_token\n          }).then(res => {\n            // Handle successful login\n            localStorage.setItem('token', res.data.token);\n            localStorage.setItem('user_id', res.data.id);\n            localStorage.setItem('loggedIn', 'true'); // Set flag indicating user is logged in\n            // this.props.history.push('/dashboard');\n\n            this.props.navigate(\"/HomeDashboard\");\n          }).catch(err => {\n            // Handle error\n            console.error('Google Sign-In failed:', err);\n          });\n        });\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      type: \"text\",\n      autoComplete: \"off\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChange,\n      placeholder: \"User Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      type: \"password\",\n      autoComplete: \"off\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      placeholder: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"button-style\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      disabled: this.state.username === '' || this.state.password === '',\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button-style\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: this.handleGoogleSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Sign In with Google\"), /*#__PURE__*/React.createElement(Link, {\n      component: \"button\",\n      onClick: () => {\n        this.props.navigate(\"/register\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Pages/Login.js"],"names":["React","Component","swal","Button","TextField","Link","withRouter","Header","axios","require","bcrypt","salt","genSaltSync","Login","constructor","props","onChange","e","setState","target","name","value","login","pwd","hashSync","state","password","post","username","then","res","localStorage","setItem","data","token","id","navigate","catch","err","response","errorMessage","text","icon","type","handleGoogleSignIn","window","gapi","load","auth2","init","client_id","signIn","googleUser","profile","getBasicProfile","id_token","getAuthResponse","console","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport { Button, TextField, Link } from \"@material-ui/core\";\nimport { withRouter } from \"../utils\";\nimport '../Styles/Login.css'; // Import custom CSS file for login page styling\nimport Header from \"../Header\";\nconst axios = require(\"axios\");\nconst bcrypt = require(\"bcryptjs\");\nvar salt = bcrypt.genSaltSync(10);\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  login = () => {\n    const pwd = bcrypt.hashSync(this.state.password, salt);\n\n    axios.post('http://localhost:2000/login', {\n      username: this.state.username,\n      password: pwd,\n    }).then((res) => {\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user_id', res.data.id);\n      localStorage.setItem('loggedIn', 'true'); // Set flag indicating user is logged in\n      // this.props.history.push('/dashboard');\n      this.props.navigate(\"/HomeDashboard\");\n    }).catch((err) => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        swal({\n          text: err.response.data.errorMessage,\n          icon: \"error\",\n          type: \"error\"\n        });\n      }\n    });\n  }\n\n  handleGoogleSignIn = () => {\n    // Initialize Google Sign-In with client ID\n    window.gapi.load('auth2', () => {\n      const auth2 = window.gapi.auth2.init({\n        client_id: '623689550663-1a1bdc3ji7qcptsb1uguudvkrfqdsab8.apps.googleusercontent.com'\n      });\n      auth2.signIn().then(googleUser => {\n        const profile = googleUser.getBasicProfile();\n        const id_token = googleUser.getAuthResponse().id_token;\n        // Send id_token to your backend for verification and user authentication\n        axios.post('http://localhost:2000/google-login', {\n          id_token: id_token\n        }).then(res => {\n          // Handle successful login\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('user_id', res.data.id);\n          localStorage.setItem('loggedIn', 'true'); // Set flag indicating user is logged in\n          // this.props.history.push('/dashboard');\n          this.props.navigate(\"/HomeDashboard\");\n        }).catch(err => {\n          // Handle error\n          console.error('Google Sign-In failed:', err);\n        });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-form\">\n          <h2>Login</h2>\n          <TextField\n            id=\"standard-basic\"\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            placeholder=\"User Name\"\n            required\n          />\n          <TextField\n            id=\"standard-basic\"\n            type=\"password\"\n            autoComplete=\"off\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.onChange}\n            placeholder=\"Password\"\n            required\n          />\n          <Button\n            className=\"button-style\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            disabled={this.state.username === '' || this.state.password === ''}\n            onClick={this.login}\n          >\n            Login\n          </Button>\n          <Button\n            className=\"button-style\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={this.handleGoogleSignIn}\n          >\n            Sign In with Google\n          </Button>\n          <Link\n            component=\"button\"\n            onClick={() => {\n              this.props.navigate(\"/register\");\n            }}\n          >\n            Register\n          </Link>\n        </div>\n        <Header />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}