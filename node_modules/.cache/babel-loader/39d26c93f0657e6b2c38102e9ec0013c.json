{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * const result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport function isSaturday(date) {\n  return toDate(date).getDay() === 6;\n} // Fallback for modularized imports:\n\nexport default isSaturday;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/isSaturday.mjs"],"names":["toDate","isSaturday","date","getDay"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAOF,MAAM,CAACE,IAAD,CAAN,CAAaC,MAAb,OAA0B,CAAjC;AACD,C,CAED;;AACA,eAAeF,UAAf","sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * const result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nexport function isSaturday(date) {\n  return toDate(date).getDay() === 6;\n}\n\n// Fallback for modularized imports:\nexport default isSaturday;\n"]},"metadata":{},"sourceType":"module"}