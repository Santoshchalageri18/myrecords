{"ast":null,"code":"import { constructNow } from \"./constructNow.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\nimport { subDays } from \"./subDays.mjs\";\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport function isYesterday(date) {\n  return isSameDay(date, subDays(constructNow(date), 1));\n} // Fallback for modularized imports:\n\nexport default isYesterday;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/isYesterday.mjs"],"names":["constructNow","isSameDay","subDays","isYesterday","date"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAOH,SAAS,CAACG,IAAD,EAAOF,OAAO,CAACF,YAAY,CAACI,IAAD,CAAb,EAAqB,CAArB,CAAd,CAAhB;AACD,C,CAED;;AACA,eAAeD,WAAf","sourcesContent":["import { constructNow } from \"./constructNow.mjs\";\nimport { isSameDay } from \"./isSameDay.mjs\";\nimport { subDays } from \"./subDays.mjs\";\n\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nexport function isYesterday(date) {\n  return isSameDay(date, subDays(constructNow(date), 1));\n}\n\n// Fallback for modularized imports:\nexport default isYesterday;\n"]},"metadata":{},"sourceType":"module"}