{"ast":null,"code":"import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n\n  const diff = getISOWeek(_date) - week;\n\n  _date.setDate(_date.getDate() - diff * 7);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default setISOWeek;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/setISOWeek.mjs"],"names":["getISOWeek","toDate","setISOWeek","date","week","_date","diff","setDate","getDate"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AACrC,QAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAD,CAApB;;AACA,QAAMG,IAAI,GAAGN,UAAU,CAACK,KAAD,CAAV,GAAoBD,IAAjC;;AACAC,EAAAA,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,OAAN,KAAkBF,IAAI,GAAG,CAAvC;;AACA,SAAOD,KAAP;AACD,C,CAED;;AACA,eAAeH,UAAf","sourcesContent":["import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n"]},"metadata":{},"sourceType":"module"}