{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport function getQuarter(date) {\n  const _date = toDate(date);\n\n  const quarter = Math.trunc(_date.getMonth() / 3) + 1;\n  return quarter;\n} // Fallback for modularized imports:\n\nexport default getQuarter;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/getQuarter.mjs"],"names":["toDate","getQuarter","date","_date","quarter","Math","trunc","getMonth"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,QAAMC,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;;AACA,QAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,QAAN,KAAmB,CAA9B,IAAmC,CAAnD;AACA,SAAOH,OAAP;AACD,C,CAED;;AACA,eAAeH,UAAf","sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * const result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nexport function getQuarter(date) {\n  const _date = toDate(date);\n  const quarter = Math.trunc(_date.getMonth() / 3) + 1;\n  return quarter;\n}\n\n// Fallback for modularized imports:\nexport default getQuarter;\n"]},"metadata":{},"sourceType":"module"}