{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport function getMilliseconds(date) {\n  const _date = toDate(date);\n\n  const milliseconds = _date.getMilliseconds();\n\n  return milliseconds;\n} // Fallback for modularized imports:\n\nexport default getMilliseconds;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/react-datepicker/node_modules/date-fns/getMilliseconds.mjs"],"names":["toDate","getMilliseconds","date","_date","milliseconds"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,QAAMC,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;;AACA,QAAME,YAAY,GAAGD,KAAK,CAACF,eAAN,EAArB;;AACA,SAAOG,YAAP;AACD,C,CAED;;AACA,eAAeH,eAAf","sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nexport function getMilliseconds(date) {\n  const _date = toDate(date);\n  const milliseconds = _date.getMilliseconds();\n  return milliseconds;\n}\n\n// Fallback for modularized imports:\nexport default getMilliseconds;\n"]},"metadata":{},"sourceType":"module"}