{"ast":null,"code":"import _slicedToArray from\"/home/mitron/Desktop/MYMEDIRECORDS/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Swal from'sweetalert2';import'../Styles/ReportPage.css';var ReportPage=function ReportPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedFiles=_useState4[0],setSelectedFiles=_useState4[1];var handleUpload=function handleUpload(){// Upload functionality here\nif(selectedFiles.length===0){Swal.fire('No files selected','Please select files to upload','warning');return;}// Simulate upload process\nSwal.fire('Upload started','Simulating upload process...','info');setTimeout(function(){Swal.fire('Upload complete','Files uploaded successfully','success');// Update records with uploaded files\nsetRecords(function(prevRecords){return prevRecords.concat(selectedFiles);});setSelectedFiles([]);// Clear selected files\n},2000);};var handleFileChange=function handleFileChange(e){var files=Array.from(e.target.files);setSelectedFiles(files);};return/*#__PURE__*/React.createElement(\"div\",{className:\"report-page\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Report\"),/*#__PURE__*/React.createElement(\"div\",{className:\"report-header\"},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",multiple:true,onChange:handleFileChange}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn upload-btn\",onClick:handleUpload},\"Upload Report\")),/*#__PURE__*/React.createElement(\"div\",{className:\"report-body\"},/*#__PURE__*/React.createElement(\"p\",null,\"Total \",records.length,\" Record(s) Found.\"),records.length===0?/*#__PURE__*/React.createElement(\"div\",{className:\"no-report\"},/*#__PURE__*/React.createElement(\"p\",null,\"No Report Available.\")):/*#__PURE__*/React.createElement(\"div\",{className:\"report-list\"},records.map(function(record,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"report-item\"},record.name,\" \");}))));};export default ReportPage;","map":{"version":3,"sources":["/home/mitron/Desktop/MYMEDIRECORDS/frontend/src/Components/ReportPage.js"],"names":["React","useState","Swal","ReportPage","records","setRecords","selectedFiles","setSelectedFiles","handleUpload","length","fire","setTimeout","prevRecords","concat","handleFileChange","e","files","Array","from","target","map","record","index","name"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CAEA,MAAO,0BAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACOF,QAAQ,CAAC,EAAD,CADf,wCAChBG,OADgB,eACPC,UADO,8BAEmBJ,QAAQ,CAAC,EAAD,CAF3B,yCAEhBK,aAFgB,eAEDC,gBAFC,eAIvB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB;AACA,GAAIF,aAAa,CAACG,MAAd,GAAyB,CAA7B,CAAgC,CAC9BP,IAAI,CAACQ,IAAL,CAAU,mBAAV,CAA+B,+BAA/B,CAAgE,SAAhE,EACA,OACD,CAED;AACAR,IAAI,CAACQ,IAAL,CAAU,gBAAV,CAA4B,8BAA5B,CAA4D,MAA5D,EACAC,UAAU,CAAC,UAAM,CACfT,IAAI,CAACQ,IAAL,CAAU,iBAAV,CAA6B,6BAA7B,CAA4D,SAA5D,EACA;AACAL,UAAU,CAAC,SAAAO,WAAW,QAAIA,CAAAA,WAAW,CAACC,MAAZ,CAAmBP,aAAnB,CAAJ,EAAZ,CAAV,CACAC,gBAAgB,CAAC,EAAD,CAAhB,CAAsB;AACvB,CALS,CAKP,IALO,CAAV,CAMD,CAfD,CAiBA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAO,CAC9B,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd,CACAT,gBAAgB,CAACS,KAAD,CAAhB,CACD,CAHD,CAKA,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,uCADF,cAEE,2BAAK,SAAS,CAAC,eAAf,eACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,QAAQ,CAAEF,gBAAtC,EADF,cAEE,8BAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAEN,YAA5C,kBAFF,CAFF,cAME,2BAAK,SAAS,CAAC,aAAf,eACE,sCAAUJ,OAAO,CAACK,MAAlB,qBADF,CAEGL,OAAO,CAACK,MAAR,GAAmB,CAAnB,cACC,2BAAK,SAAS,CAAC,WAAf,eACE,oDADF,CADD,cAKC,2BAAK,SAAS,CAAC,aAAf,EAEGL,OAAO,CAACgB,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,qBACX,2BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,aAA3B,EACGD,MAAM,CAACE,IADV,KADW,EAAZ,CAFH,CAPJ,CANF,CADF,CA0BD,CApDD,CAsDA,cAAepB,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport '../Styles/ReportPage.css';\n\nconst ReportPage = () => {\n  const [records, setRecords] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n\n  const handleUpload = () => {\n    // Upload functionality here\n    if (selectedFiles.length === 0) {\n      Swal.fire('No files selected', 'Please select files to upload', 'warning');\n      return;\n    }\n\n    // Simulate upload process\n    Swal.fire('Upload started', 'Simulating upload process...', 'info');\n    setTimeout(() => {\n      Swal.fire('Upload complete', 'Files uploaded successfully', 'success');\n      // Update records with uploaded files\n      setRecords(prevRecords => prevRecords.concat(selectedFiles));\n      setSelectedFiles([]); // Clear selected files\n    }, 2000);\n  };\n\n  const handleFileChange = (e) => {\n    const files = Array.from(e.target.files);\n    setSelectedFiles(files);\n  };\n\n  return (\n    <div className=\"report-page\">\n      <h2>Report</h2>\n      <div className=\"report-header\">\n        <input type=\"file\" multiple onChange={handleFileChange} />\n        <button className=\"btn upload-btn\" onClick={handleUpload}>Upload Report</button>\n      </div>\n      <div className=\"report-body\">\n        <p>Total {records.length} Record(s) Found.</p>\n        {records.length === 0 ? (\n          <div className=\"no-report\">\n            <p>No Report Available.</p>\n          </div>\n        ) : (\n          <div className=\"report-list\">\n            {/* Render uploaded records */}\n            {records.map((record, index) => (\n              <div key={index} className=\"report-item\">\n                {record.name} {/* Display file name or any other relevant information */}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReportPage;\n"]},"metadata":{},"sourceType":"module"}